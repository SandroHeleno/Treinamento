#BlueJ class context
comment0.params=book
comment0.target=AddressBookFileHandler(AddressBook)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ FileHandler.\r\n\ @param\ book\ The\ address\ book\ to\ use.\r\n
comment1.params=demo
comment1.target=AddressBookFileHandler(AddressBookDemo)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ FileHandler.\r\n\ @param\ demo\ The\ address\ book\ demo\ to\ use.\r\n
comment2.params=keyPrefix
comment2.target=void\ saveSearchResults(java.lang.String)
comment2.text=\r\n\ Save\ the\ results\ of\ an\ address-book\ search\ to\r\n\ the\ file\ "results.txt"\ in\ the\ project\ folder.\r\n\ @param\ keyPrefix\ The\ key\ prefix\ to\ search\ on.\r\n
comment3.params=
comment3.target=void\ showSearchResults()
comment3.text=\r\n\ Show\ the\ results\ from\ the\ most-recent\ call\ to\r\n\ saveSearchResults.\ As\ output\ is\ to\ the\ console,\ any\r\n\ problems\ are\ reported\ directly\ by\ this\ method.\r\n
comment4.params=filename
comment4.target=void\ addEntriesFromFile(java.lang.String)
comment4.text=\r\n\ Add\ further\ entries\ to\ the\ address\ book,\ from\ a\ text\ file.\r\n\ The\ file\ is\ assumed\ to\ contain\ one\ element\ per\ line,\r\n\ plus\ a\ blank\ line,\ for\ each\ entry\:\r\n\ \ \ \ \ name\ \\n\ phone\ \\n\ address\ \\n\ \\n\r\n\ A\ line\ may\ be\ blank\ if\ that\ part\ of\ the\ details\ is\ missing.\r\n\ @param\ filename\ The\ text\ file\ containing\ the\ details.\r\n\ @throws\ IOException\ On\ input\ failure.\r\n
comment5.params=sourceFile
comment5.target=void\ showSerializationFile(java.lang.String)
comment5.text=\r\n\ Show\ the\ binary\ version\ of\ the\ address\ book\ from\r\n\ the\ given\ file.\ As\ output\ is\ to\ the\ console,\ any\r\n\ problems\ are\ reported\ directly\ by\ this\ method.\r\n
comment6.params=sourceFile
comment6.target=AddressBook\ readFromFile(java.lang.String)
comment6.text=\r\n\ Read\ the\ binary\ version\ of\ an\ address\ book\ from\ the\ given\ file.\r\n\ If\ the\ file\ name\ is\ not\ an\ absolute\ path,\ then\ it\ is\ assumed\r\n\ to\ be\ relative\ to\ the\ current\ project\ folder.\r\n\ @param\ sourceFile\ The\ file\ from\ where\ the\ details\ are\ to\ be\ read.\r\n\ @return\ The\ address\ book\ object.\r\n\ @throws\ IOException\ If\ the\ reading\ process\ fails\ for\ any\ reason.\r\n
comment7.params=destinationFile
comment7.target=void\ saveToFile(java.lang.String)
comment7.text=\r\n\ Save\ a\ binary\ version\ of\ the\ address\ book\ to\ the\ given\ file.\r\n\ If\ the\ file\ name\ is\ not\ an\ absolute\ path,\ then\ it\ is\ assumed\r\n\ to\ be\ relative\ to\ the\ current\ project\ folder.\r\n\ @param\ destinationFile\ The\ file\ where\ the\ details\ are\ to\ be\ saved.\r\n\ @throws\ IOException\ If\ the\ saving\ process\ fails\ for\ any\ reason.\r\n
comment8.params=filename
comment8.target=java.io.File\ makeAbsoluteFilename(java.lang.String)
comment8.text=\r\n\ Create\ an\ absolute\ file\ from\ the\ given\ file\ name.\r\n\ If\ the\ filename\ is\ an\ absolute\ one\ already,\ then\ use\ it\r\n\ unchanged,\ otherwise\ assume\ it\ is\ relative\ to\ the\r\n\ current\ project\ folder.\r\n\ @throws\ IOException\ If\ a\ valid\ filename\ cannot\ be\ made.\r\n
comment9.params=
comment9.target=java.io.File\ getProjectFolder()
comment9.text=\r\n\ Try\ to\ determine\ the\ name\ of\ the\ current\ project\ folder.\r\n\ This\ process\ involves\ locating\ the\ path\ of\ the\ .class\ file\r\n\ for\ this\ class,\ and\ then\ extracting\ the\ name\ of\ the\ folder\r\n\ containing\ it.\r\n\ @throws\ URISyntaxException\ If\ the\ URL\ is\ not\ formatted\ correctly.\r\n\ @return\ The\ current\ project\ folder.\r\n
numComments=10
